// language menu interaction
// Eirik Hanssen, (c) 2015

window.addEventListener("load", langMenusInit, false);
var primary_lang_controls,
    secondary_lang_controls, 
    primary_lang_labels, 
    secondary_lang_labels, 
    all_lang_controls,
    primary_language_container,
    secondary_language_container,
    hidden_languages_container,
    all_languages = [];

function langMenusInit () {
    console.log("initializing language menu interaction");
    primary_lang_controls = document.querySelectorAll("#primary_language input");
    primary_lang_labels = document.querySelectorAll("#primary_language label");
    secondary_lang_controls = document.querySelectorAll("#secondary_language input");
    secondary_lang_labels = document.querySelectorAll("#secondary_language label");
    all_lang_controls = document.querySelectorAll("#lang_select input");
    primary_language_container = document.getElementById("primary_language_container");
    secondary_language_container = document.getElementById("secondary_language_container");
    hidden_languages_container = document.getElementById("hidden_languages_container");
    addLanguageMenuBehaviour();
    console.log("adding article elements to array");
    var articles_in_document = document.getElementsByTagName("article");
    for (var i = 0; i < articles_in_document.length; i++) {
        if (articles_in_document[i].id.indexOf("language-contents") == 0) {
            var lang = articles_in_document[i].id.replace(/.+-(.+)$/,"$1");
            all_languages[i] = articles_in_document[i];
            //console.log(articles_in_document[i].id + ": pass");
        } else {
            //console.log(articles_in_document[i].id + ": fail");
        }
    }
}

function addLanguageMenuBehaviour() {
    // add selected class to preselected input elements.
    for (var i=0; i < all_lang_controls.length; i++) {
        toggleSelectedDisplayStatus(all_lang_controls[i]);
    }

    // add behaviour to input elements
    for (var i=0; i < primary_lang_controls.length; i++) {
        primary_lang_controls[i].addEventListener('change', primaryLanguageDisplayState,false);
    }

    for (var i=0; i < secondary_lang_controls.length; i++) {
        secondary_lang_controls[i].addEventListener('change', secondaryLanguageDisplayState,false);
    }
}

function primaryLanguageDisplayState(ev) {
    //console.log(ev.target.id + " - primary - has changed");
    for (var i=0; i < secondary_lang_controls.length; i++) {
        activateInput(secondary_lang_controls[i]);
    }
    for (var i=0; i < primary_lang_controls.length; i++) {
        toggleSelectedDisplayStatus(primary_lang_controls[i]);
    }
    rotateLanguages();
}

function secondaryLanguageDisplayState(ev) {
    //console.log(ev.target.id + " - secondary - has changed");
    
    //console.log(current_lang);
    for (var i=0; i < secondary_lang_controls.length; i++) {
        toggleSelectedDisplayStatus(secondary_lang_controls[i]);
    }
    
    rotateLanguages();
}

function activateInput(element) {
    element.disabled=false;
    removeClass(element.parentElement, 'disabled');
}

function deActivateInput(element) {
    element.disabled=true;
    addClass(element.parentElement, 'disabled');
}

function toggleSelectedDisplayStatus(element) {
    if(element.checked === true) {
        addClass(element.parentElement, 'selected');
    } else {
        removeClass(element.parentElement, 'selected');
    }
}

function rotateLanguages() {
// put language in primary_language_container in hidden_languages_container
// put language in secondary_language_container in hidden_languages_container
// append primary selected lanuage to primary_language_container
// append secondary selected language to secondary_language_container
// set/unset 'dual' class on body

    if (secondary_language_container.getElementsByTagName("article").length > 0) {
        hidden_languages_container.appendChild(secondary_language_container.getElementsByTagName("article")[0]);
    }
    if (primary_language_container.getElementsByTagName("article").length > 0) {
        hidden_languages_container.appendChild(primary_language_container.getElementsByTagName("article")[0]);
    }
    
    if (language_selected(primary_lang_controls) !== false) {
        primary_language_container.appendChild(getLanguageContentsElement(language_selected(primary_lang_controls)));
    }
    
    if (language_selected(secondary_lang_controls) !== false) {
        secondary_language_container.appendChild(getLanguageContentsElement(language_selected(secondary_lang_controls)));
    }
    
    updateDualClassOnBody();
    //console.log("pri: "+language_selected(primary_lang_controls));
    //console.log("sec: "+language_selected(secondary_lang_controls));
}

function getLanguageContentsElement(str){
    // receive language string , "ar" | "no" | "so" | "ti";
    // return languageContainerElement of the appropriate language
    var languageContainerElement;
    for(var i = 0; i< all_languages.length; i++) {
        if (all_languages[i].id.replace(/^.+-([^-]+)$/,'$1') == str) {
            return all_languages[i];
        }
    }
    return false;
}

function language_selected(lang_controls_array) {
    // return language code string of selected input in param lang_controls_array or false
    // returns the last part of the id-string after the final underscore, that's how the language
    // code is represented in the id's
    var selected_language;
    for (var i = 0; i<lang_controls_array.length; i++) {
        if (lang_controls_array[i].checked === true) {
            selected_language = lang_controls_array[i].id.replace(/.+_(.+)$/,"$1");
            if (selected_language !== "none")
            return(selected_language);
        }
    }
    return false;
}

function updateDualClassOnBody() {
    // if there is language content (article element) in both 
    // primary_language_container and secondary_language_container, 
    // make sure that body has the 'dual' class.
    // otherwise, make sure body doesn't have the 'dual' class
    if (secondary_language_container.getElementsByTagName("article").length + primary_language_container.getElementsByTagName("article").length  > 1) {
        addClass(document.body, 'dual');
    } else {
        removeClass(document.body, 'dual');
    }
}